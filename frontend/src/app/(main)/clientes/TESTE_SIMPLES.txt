// ‚úÖ TESTE: Substitua apenas estas linhas no seu c√≥digo atual:

// 1. Encontre a fun√ß√£o handleInputChange e substitua por:
const handleInputChange = (name: string, value: string) => {
    console.log('üîÑ Input:', name, '=', value)
    setFormData(prev => {
        const newData = { ...prev, [name]: value }
        console.log('üìù New formData:', newData)
        return newData
    })
    setHasUnsavedChanges(true)
}

// 2. Encontre a fun√ß√£o isFormValid e substitua por:
const isFormValid = (): boolean => {
    if (!formData) return false
    
    const nome = formData.nome?.trim() || ''
    const email = formData.email?.trim() || ''
    const telefone = formData.telefone?.trim() || ''
    const endereco = formData.endereco?.trim() || ''
    const cidade = formData.cidade?.trim() || ''
    
    const isValid = nome.length > 0 && 
                   email.length > 0 && 
                   telefone.length > 0 && 
                   endereco.length > 0 && 
                   cidade.length > 0
    
    console.log('‚úÖ Form valid:', isValid, { nome, email, telefone, endereco, cidade })
    return isValid
}

// 3. No bot√£o, use apenas isto:
disabled={saving}

// 4. Adicione esta linha logo ap√≥s o DialogHeader para debug:
<div className="p-3 bg-yellow-100 rounded mb-4">
    <strong>DEBUG:</strong> Form Valid: {isFormValid() ? '‚úÖ' : '‚ùå'} | 
    Saving: {saving ? '‚è≥' : '‚úÖ'} | 
    Nome: "{formData.nome}" | 
    Email: "{formData.email}"
</div>

// INSTRU√á√ïES:
// 1. Fa√ßa essas 4 altera√ß√µes no seu arquivo atual
// 2. Teste preenchendo pelo menos nome e email
// 3. Veja se o debug box mostra "Form Valid: ‚úÖ"
// 4. O bot√£o deve ficar habilitado (n√£o cinza)
